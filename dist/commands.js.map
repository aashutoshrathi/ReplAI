{"version":3,"file":"commands.js","mappings":"UACIA,EAAsB,GCD1BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,GCGxB,IAAIC,EAAsB,G,WCI1BC,OAAOC,SAAQ,gBAgCU,oBAATC,KACVA,KACkB,oBAAXJ,OACPA,YACkB,IAAXK,EAAAA,EACPA,EAAAA,OACAC,GAMJC,OApCF,SAAgBC,GACdN,OAAOO,QAAQC,QAAQC,KAAKC,KAAKC,SAC/B,OACA,CAAEC,aAAc,mCAChB,SAAkBC,GAChBb,OAAOO,QAAQC,QAAQC,KAAKK,iBAAiBD,EAAOE,MAAMC,MAAM,KAAKC,KAAK,UAI9E,IAAMC,EAAU,CACdC,KAAMnB,OAAOoB,aAAaC,4BAA4BC,qBACtDJ,QAAS,oBACTK,KAAM,aACNC,YAAY,GAIdxB,OAAOO,QAAQC,QAAQC,KAAKgB,qBAAqBC,aAAa,SAAUR,GAGxEZ,EAAMqB,a,gbD/BRC,CAA2B,EAAG7B,EAAqBP,I","sources":["webpack:///webpack/bootstrap?","webpack:///webpack/runtime/global?","webpack:///webpack/startup?","webpack:///./src/commands/commands.js?"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[50388](0, __webpack_exports__, __webpack_require__);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global global, Office, self, window */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called\n});\n\n/**\n * Shows a notification when the add-in command is executed.\n * @param event {Office.AddinCommands.Event}\n */\nfunction action(event) {\n  Office.context.mailbox.item.body.getAsync(\n    \"text\",\n    { asyncContext: \"This is passed to the callback\" },\n    function callback(result) {\n      Office.context.mailbox.item.displayReplyForm(result.value.split(\" \").join(\";;\"));\n    }\n  );\n\n  const message = {\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\n    message: \"Performed action.\",\n    icon: \"Icon.80x80\",\n    persistent: true,\n  };\n\n  // Show a notification message\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\n\n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\nfunction getGlobal() {\n  return typeof self !== \"undefined\"\n    ? self\n    : typeof window !== \"undefined\"\n    ? window\n    : typeof global !== \"undefined\"\n    ? global\n    : undefined;\n}\n\nconst g = getGlobal();\n\n// The add-in command functions need to be available in global scope\ng.action = action;\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","__webpack_exports__","Office","onReady","self","global","undefined","action","event","context","mailbox","item","body","getAsync","asyncContext","result","displayReplyForm","value","split","join","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","notificationMessages","replaceAsync","completed","__webpack_modules__"],"sourceRoot":""}